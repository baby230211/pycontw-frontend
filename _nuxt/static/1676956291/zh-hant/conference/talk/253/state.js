window.__NUXT__=(function(a,b,c){return {staticAssetsBase:"\u002Fpycontw-2021\u002F_nuxt\u002Fstatic\u002F1676956291",layout:"default",error:b,state:{sponsorsData:[],jobsData:[],schedulesData:[],keynotesData:[],youtubeInfo:[],speechesData:[],speechData:{id:253,begin_time:"2022-09-04T05:25:00Z",end_time:"2022-09-04T05:55:00Z",is_remote:false,location:"5-r1-1",youtube_id:a,title:"Function dissection lab -- learn how functions work by examining their innards",category:"CORE",language:"ENEN",python_level:"INTERMEDIATE",recording_policy:c,abstract:"What happens when you call a function? For that matter, what happens when you define a function? In this talk, we'll look at function objects, how they are built, and how they behave, with a particular emphasis on the different types of parameters we can define.",detailed_description:"When you invoke a function, how does it know how many arguments to expect? How does it distinguish between local and global (and enclosing) variables? How does it know that you defined the function with args and\u002For \\*kwargs? And where does it store such things as docstrings, annotations, and defaults?\r\n\r\nThe short answer is that Python functions are objects – no different from integers, strings, and dicts. And like all other objects, functions have attributes. It turns out that those attributes are the source of functions’ power.\r\n\r\nIn this talk, we’ll peek into function attributes, gaining an understanding of (and appreciation for) the way in which functions are built. We’ll also see the relationship between attributes, functions, and Python bytecodes. And while we’ll be dissecting many functions, I can assure you that none of them will be harmed in our quest for deeper understanding.\r\n\r\nEven if you've been using Python for years, there's a good chance that you've never thought about how Python keeps track of this information. And you might never have thought about how many types of parameters Python allows for, and why they all exist. Even if you do know, this talk will put all of that in context.",slide_link:a,slido_embed_link:"https:\u002F\u002Fapp.sli.do\u002Fevent\u002FkS1oHFhANeSMmXLNnHfbmM",hackmd_embed_link:"https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FrJdGvpX1j",speakers:[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Ftemp\u002Fmedia\u002Fcache\u002F8a\u002Fb1\u002F8ab13b485e377814ac7e82f23d0b0ac9.jpg",name:"Reuven M. Lerner",github_profile_url:"https:\u002F\u002Fgithub.com\u002Freuven",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Freuvenmlerner",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002Freuvenmlerner",bio:"Teaching Python and data science around the world since 1995. Author of the books \"Python Workout\" and \"Pandas Workout\". Publisher of the \"Better developers\" newsletter. I spend each day trying to help people improve their Python skills."}],event_type:"talk"},relatedData:[],i18n:{routeParams:{}}},serverRendered:c,routePath:"\u002Fzh-hant\u002Fconference\u002Ftalk\u002F253",config:{gtm:{id:a},_app:{basePath:"\u002Fpycontw-2021\u002F",assetsPath:"\u002Fpycontw-2021\u002F_nuxt\u002F",cdnURL:b}}}}("",null,true));