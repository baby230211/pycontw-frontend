__NUXT_JSONP__("/zh-hant/conference/talk/262", (function(a){a.id=262;a.begin_time="2022-09-03T02:45:00Z";a.end_time="2022-09-03T03:15:00Z";a.is_remote=false;a.location="4-r0";a.youtube_id="";a.title="Python Design Patterns";a.category="CORE";a.language="ZHEN";a.python_level="INTERMEDIATE";a.recording_policy=true;a.abstract="在本次演講中，我將分享如何利用 Design Patterns(設計模式) 針對一個反覆出現的問題，提出可重覆使用(reusable)解決方案的思考脈絡，並以開發醫療資訊系統的過程作為案例探討；同時也會討論因為 Python 語言的特性而針對 Design Patterns 提出更 Pythonic 的程式撰寫方法。\r\n\r\n首先我將簡單介紹「 Design Patterns 是什麼？」以及「可擴充的軟體設計觀念」。\r\n\r\n接著將分享一個套用 Design Patterns 的案例：在一個企業健檢的問卷系統中，嘗試採用物件導向設計幫問卷表單進行資料建模，進而套用合適的設計模式(composite, factory method, visitor 等) 提高程式的可重性&可擴充性。\r\n\r\n自己本來認為 Design Patterns 應該是與語言無關，是用於問題領域(Problem Domain)的解決方案(Solution)。更深入地探討設計模式在 Python 的應用過程中，發現有人提出在 Python 中應用設計模式可以被簡化的想法(請見詳細說明)\r\n\r\n因此，最後一部份將探討如何利用 Python 動態語言的特性(first-class function)將傳統 GoF 的設計模式改寫為更簡潔的形式。";a.detailed_description="過去三年我參與醫院資訊系統的開發，一直有許多表單填寫的需求(可能有上百張表單)，以往的開發模式大多是工程師會為每一張表單手動開發一個介面：花了很多人力，類似的程式碼也一直地重覆出現。\r\n\r\n在一個企業健檢的問卷系統中，我們團隊嘗試採用物件導向設計的方法幫問卷表單進行資料建模，進而套用合適的設計模式，成功地提高程式的可重性&可擴充性。\r\n\r\n自己本來認為設計模式應該是與語言無關，是用於問題領域的解決方案，更深入的探討設計模式在 Python 的應用過程中, 發現有人提出使用 Python 不需要設計模式的看法 [\"You Don't Need That!\", 2018 PyCon AU](https:\u002F\u002Fwww.youtube.com\u002Fwatch?v=imW-trt0i9I), \r\n\r\n在 Peter Norvig 1996年的演講 [\"Design Patterns in Dynamic Languages\"](http:\u002F\u002Fnorvig.com\u002Fdesign-patterns\u002F ) 中，他指出在 GoF Design Patterns 書中 23 種模式，裡面的 16 種模式因為動態語言(ex. Lisp, Smalltalk, Python)的特性，應該可以 \"被簡化\" 或是直接內建而 \"看不到\" (第9張簡報)\r\n\r\n因此在這次分享中將先介紹 Design Patterns 以及其應用在軟體設計的優點，接著以一個實際情境作案例分享如何套用 design patterns，最後探討在 Python 中如何再簡化傳統設計模式的程式。\r\n\r\n參與者可以聽到：\r\n* Design Patterns 基本觀念\r\n* 面對反覆出現的問題，使用 Design Patterns 提出可重用&可擴充的解決方案\r\n* 以案例介紹套用Design Patterns的思考脈絡(只會提到 composite, factory method, visitor 等 patterns)\r\n* 利用Python動態語言特色(first-class function) 讓 Design Patterns 更簡潔\r\n\r\n適合參加的對象：\r\n* 了解物件導向程式概念\r\n* 有設計和開發軟體系統的經驗\r\n* 中級 Python 知識(ex. first-class function)\r\n\r\n簡報中的程式範例：[Demo programs for \"Python Design Pattern\" at PyCon APAC 2022.](https:\u002F\u002Fgithub.com\u002Fcclai999\u002Fpyconapac22-dp)";a.slide_link="https:\u002F\u002Fspeakerdeck.com\u002Fcclai999\u002Fpython-design-patterns-at-pycon-apac-2022";a.slido_embed_link="https:\u002F\u002Fapp.sli.do\u002Fevent\u002F2PogqXP48VeQQkjYcXhMBT";a.hackmd_embed_link="https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FH1NiUaQJo";a.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Ftemp\u002Fmedia\u002Fcache\u002Fca\u002F36\u002Fca361b68c0e016b2f2016b0cb8f298d8.jpg",name:"Max Lai",github_profile_url:"https:\u002F\u002Fgithub.com\u002Fcclai999",twitter_profile_url:"https:\u002F\u002Ftwitter.com\u002Fcclai999",facebook_profile_url:"https:\u002F\u002Fwww.facebook.com\u002Fmax.cc.lai",bio:"- Taichung.py 組織者\r\n\r\n- 在中部醫療機構擔任智慧醫療應用系統研發團隊之 Tech Lead\r\n\r\n- 研究領域是電腦視覺, 機器學習, Web程式開發, DDD 與敏捷軟體開發方法論"}];a.event_type="talk";return {data:[{speechData:a}],fetch:{},mutations:[["setSpeechData",a]]}}({})));