__NUXT_JSONP__("/en-us/conference/talk/259", (function(a,b){b.id=259;b.begin_time="2022-09-03T06:05:00Z";b.end_time="2022-09-03T06:35:00Z";b.is_remote=false;b.location="4-r0-2";b.youtube_id=a;b.title="Using Python to interpret your genetic testing data";b.category="APPL";b.language="ZHEN";b.python_level="INTERMEDIATE";b.recording_policy=true;b.abstract="Did you hear the news about the results of genetic testing may affect the accessibility of insurance? There’s no doubt that healthcare has become a critical issue from individuals to industries in recent years. Everyone’s genetic information give a hint about how likely we get a disease or who is at high risk of a specific symptom, which is also humorously called fortune-telling in scientific way in the field of life science. In addition to machine learning or FinTech, Python as a popular language in data science, cannot only help us to translate genetic codes into health information, but also can be used to build a healthcare information platform based-on genetic testing results. In this talk, we are going to introduce the basic knowledge about genetic testing and how we use Python to tackle this healthcare-related issue for the people whom are interested in applying python in biomedical industries.";b.detailed_description="### Third-party Python Package for Back End\r\n- Data Processing: (We do not tell the detailed of basic python packages in this presentation)\r\n    - Pandas\r\n        - Role: To process DataFrame \r\n        - https:\u002F\u002Fpandas.pydata.org\u002F\r\n    - Numpy\r\n        - Role: To handle the problems on arrays and mathematics\r\n        - https:\u002F\u002Fnumpy.org\u002F\r\n    - OS system packages: os, subprocess\r\n- Bioinformatics and visualization of biological data in python:\r\n    - biothings_client\r\n        - Role: To retrieve information from NCBI database using API\r\n        - https:\u002F\u002Fpypi.org\u002Fproject\u002Fbiothings-client\u002F\r\n    - matplotlib\r\n        - Role: To visualization (based package)\r\n        - https:\u002F\u002Fmatplotlib.org\u002F\r\n    - qmplot\r\n        - Role: To make qqplot, manhattan plot for GWAS\r\n        - https:\u002F\u002Fgithub.com\u002FShujiaHuang\u002Fqmplot\r\n- Back-end framework in python\r\n    - Django\r\n        - https:\u002F\u002Fwww.djangoproject.com\u002F\r\n- The main tool on GWAS analysis \r\n    - Plink 2.0\r\n    - https:\u002F\u002Fwww.cog-genomics.org\u002Fplink\u002F2.0\u002F\r\n    - magma: gene set analysis on GWAS\r\n    - https:\u002F\u002Fctg.cncr.nl\u002Fsoftware\u002Fmagma\r\n- Database\r\n    - sqlite3\r\n        - https:\u002F\u002Fwww.sqlite.org\u002Findex.html\r\n    - mysql\r\n        - https:\u002F\u002Fwww.mysql.com\u002F\r\n\r\n### Third-Party Language for Front End\r\n- Javascript-based vue.js framework (ver.3)\r\n    - https:\u002F\u002Fvuejs.org\u002F\r\n- Jquery\r\n    - https:\u002F\u002Fvuejs.org\u002F\r\n\r\n\r\n### Demonstration of Python project: ArrayMeister\r\n- ArrayMeister, which is combined with Vue.js as front-end framework and Python Django as back-end framework, to estimate the potentially influential genomic variants on health issues (phenotypes). \r\n- Our platform was designed with user-friendly interface, flexible system, and reinforcement data-driven environment.\r\n- End users could run the genomics data in ArrayMeister by three modes: GWAS, PRS, and Annotation bank. Meanwhiles, all the raw array data could be transformed by genotyping algorithms.\r\n- To address the health issues which users studied, the genomics array data could be performed GWAS (genome-wide association study) to find out candidate associated variants. \r\n- Furthermore, more strongly classification could be generated by modeling Polygenic Risk Scores (PRS) which were composed of their GWAS findings (This part will not detailed in the presentation). \r\n- These interested variants could be added on biological annotation with updating public resources. With ArrayMeister, all of potential findings would be renewed to their own in-house database to create more robust genetic information on health risk estimation.";b.slide_link="https:\u002F\u002Fdrive.google.com\u002Ffile\u002Fd\u002F1_-6Zb0uJE-8-yN1BhIay8yEpAOSlusZH\u002Fview?usp=sharing";b.slido_embed_link="https:\u002F\u002Fapp.sli.do\u002Fevent\u002F3ALyQXW5BkHp1YK11fzLx9";b.hackmd_embed_link="https:\u002F\u002Fhackmd.io\u002F@pycontw\u002FHJ4kPaXyj";b.speakers=[{thumbnail_url:"https:\u002F\u002Ftw.pycon.org\u002Ftemp\u002Fmedia\u002Fcache\u002F63\u002F96\u002F63966baeae4d001bcf880b0954df71a5.jpg",name:"DailyGold999",github_profile_url:a,twitter_profile_url:a,facebook_profile_url:a,bio:"We comes from the team from Molecular Sciences and Digital Innovation Center (MSDIC) in Genetics Generation Advancement Corporation (GGA) in Taiwan, which provides solutions on bioinformatics, material science, electronics laboratory management systems, and biological modeling. Nowadays, some of our partners, are dedicated to providing solutions on handling the bio-data, including next generation sequencing data or another bio-resources, to generate the biological meaning and address the needs from customers. We have built a platform called \"ArrayMeister\" to find out genetic effects on accessibility of insurance. On the other hand, we also have a official website and manage Youtube channel to provide new information about data science and product training course. We are glad to enjoy the meeting on Pycon and share the technique or knowhow on Python."}];b.event_type="talk";return {data:[{speechData:b}],fetch:{},mutations:[["setSpeechData",b]]}}("",{})));